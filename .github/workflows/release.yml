name: Release

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+**'
  # to test the workflow
  pull_request:
    paths:
    - '.github/workflows/release.yml'

permissions: 
  contents: write

env:
  # Preview mode: Publishes the build output as a CI artifact instead of creating
  # a release, allowing for manual inspection of the output. This mode is
  # activated if the CI run was triggered by events other than pushed tags
  preview: ${{ !startsWith(github.ref, 'refs/tags/') }}
  pre-release: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') }}
  version: dev

jobs:
  changelog:
    name: Update changelog
    runs-on: ubuntu-22.04
    outputs: 
      release_body: ${{ steps.git-cliff.outputs.content }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Generate changelog
        uses: orhun/git-cliff-action@v3
        id: git-cliff
        with:
          args: -vv --latest --no-exec --strip header
        env:
          OUTPUT: CHANGES.md
          GITHUB_REPO: ${{ github.repository }}
  build-binaries:
    name: Build binaries
    permissions: 
      contents: write
    strategy:
      fail-fast: false
      matrix:
        build: [x86_64-linux, x86_64-windows, aarch64-macos]
        include:
          - build: x86_64-linux
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - build: x86_64-windows
            os: windows-latest
            target: x86_64-pc-windows-msvc
          - build: aarch64-macos
            os: macos-latest
            target: aarch64-apple-darwin
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Initialize version
        shell: bash
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          fi

      - uses: pnpm/action-setup@v4
        with:
          version: 8
      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.target }}
      
      - name: install dependencies (ubuntu only)
        if: matrix.os == 'ubuntu-latest' # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: install frontend dependencies
        run: pnpm install

      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: "src-tauri -> target"
      
      - name: Build binaries
        run: pnpm tauri build -- --locked --target ${{ matrix.target }}

      - name: Copy binaries
        shell: bash
        run: |
          mkdir -p artifacts
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            cp "src-tauri/target/${{ matrix.target }}/release/isw-calculator.exe" "artifacts/isw-calculator-${{ env.version }}-${{ matrix.build }}.exe"
          else
            cp "src-tauri/target/${{ matrix.target }}/release/isw-calculator" "artifacts/isw-calculator-${{ env.version }}-${{ matrix.build }}"
          fi
      
      - uses: actions/upload-artifact@v4
        with:
          name: bin-${{ env.version }}-${{ matrix.build }}
          path: artifacts
  release:
    name: Release
    needs: [changelog, build-binaries]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Initialize version
        shell: bash
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          fi

      - uses: actions/download-artifact@v4
      
      - name: Copy binaries
        run: |
          mkdir -p upload_artifacts
          cp -r bin-*/* upload_artifacts/

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        if: env.preview == 'false'
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: upload_artifacts/*
          file_glob: true
          tag: ${{ github.ref_name }}
          release_name: "Release v${{ env.version }}"
          body: "${{ needs.changelog.outputs.release_body }}"
          overwrite: true
      - name: Upload binaries as artifact
        uses: actions/upload-artifact@v4
        if: env.preview == 'true'
        with:
          name: release
          path: upload_artifacts/*
